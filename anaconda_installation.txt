khartes is written in Python; it requires a few 
external modules.  Below are the Anaconda commands 
I used in Windows to import the needed modules.  
Probably the pip commands and module names are 
similar, but I haven't tested them.  Although khartes 
does not actually use matlib, I installed it because 
doing so automatically installs PyQt5 and numpy.

One possibly unfamiliar package is pynrrd, 
which implements (in pure python) the NRRD format 
(Nearly Raw Raster Data).  This format consists 
of an ascii header followed by binary raster data;
khartes uses this format for storing data volumes.

Another unusual package is rectpack, which is
used for packing 2D rectangles in a minimum-size box.
It is used when exporting textures in the export-mesh
function.

I tested khartes in Python 3.11, but it probably works 
on slightly older versions of Python 3 as well.

User hari_seldon has informed me that the pip equivalent 
of opencv is opencv-python-headless (Thanks hari!).
And it turns out that the pip install of matplotlib does 
not import pyqt5, so you will need to pip install pyqt5 
as well.

conda create -n vch python=3.11
conda install matplotlib
conda install opencv
conda install scipy
conda install -c conda-forge pynrrd
conda install -c conda-forge rectpack

# TODO: add a proper conda requirements file 
# Additional requirements for Brett's speed improvement code.
conda install zarr
conda install tifffile
conda install PIL